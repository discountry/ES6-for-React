## Template literals

### Defination

> Constants are block-scoped, much like variables defined using the let statement. The value of a constant cannot change through re-assignment, and it can't be redeclared.

### Syntax

`const name1 = value1 [, name2 = value2 [, ... [, nameN = valueN]]];`

### Examples

```js
const hello = 'hi'
```

### Usage

Example from [react-router](https://reacttraining.com/react-router/web/guides/quick-start).

```jsx
const Topics = ({ match }) => (
  <div>
    <h2>Topics</h2>
    <ul>
      <li>
        <Link to={`${match.url}/rendering`}>
          Rendering with React
        </Link>
      </li>
      <li>
        <Link to={`${match.url}/components`}>
          Components
        </Link>
      </li>
      <li>
        <Link to={`${match.url}/props-v-state`}>
          Props v. State
        </Link>
      </li>
    </ul>

    <Route path={`${match.url}/:topicId`} component={Topic}/>
    <Route exact path={match.url} render={() => (
      <h3>Please select a topic.</h3>
    )}/>
  </div>
)
```

### References

* [MDN Template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const)